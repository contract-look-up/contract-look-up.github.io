{"version":3,"sources":["utils/index.tsx","components/contract_menu/index.tsx","components/natspec/index.tsx","components/abi_caller/response/index.tsx","components/abi_caller/inputs/index.tsx","components/abi_caller/request/index.tsx","components/abi_caller/function.tsx","components/abi_caller/event.tsx","components/source_code/index.tsx","views/content/index.tsx","views/home/index.tsx","reportWebVitals.ts","index.tsx"],"names":["functionFormatStringFromABI","abi","inputFormat","inputs","map","type","join","name","functionSourceCodeFormatFromABI","indexed","outputFormat","outputs","length","undefined","stateMutability","ContractMenu","props","web3","Web3","window","ethereum","useState","ownerAddress","setOwnerAddress","currentProvider","sendAsync","method","error","response","result","e","MenuHeader","style","width","height","size","icon","UserOutlined","danger","slice","Sider","theme","overflow","position","left","mode","borderRight","contracts","contractObject","contractIndex","SubMenu","ProfileFilled","title","contractName","AreaChartOutlined","filter","abiFun","index","funSignFormat","utils","Item","onClick","_","onSelectedABI","userdoc","methods","notice","BarChartOutlined","UploadOutlined","matchingTypeDescription","content","reg","matchGroup","exec","replaceAll","trim","bindInputs","fromData","doc","binded","forEach","input","secondaryType","params","typeEncode","endsWith","includes","splited","split","Error","push","value","toWei","LogsDisplay","data","devdoc","columns","extDesc","NatspecExt","dataIndex","key","render","text","dataSource","log","decoedLog","eth","decodeLog","raw","topics","encodeObject","parseFloat","fromWei","toFixed","toUpperCase","toString","moment","unix","format","bodyStyle","padding","bordered","ResponseDisplay","record","Array","output","returns","decodeParameters","param","desc","pagination","expandable","expandedRowRender","displayDataTypes","displayObjectSize","src","rowExpandable","Option","Select","InputTextFromItem","arg","regExp","errorMessage","fieldName","required","secondary","rules","validator","inputValue","a","subInput","test","Promise","reject","resolve","label","TextArea","autoSize","color","placeholder","addonAfter","TypeInputText","RegExp","TypeInputNumber","TypeInputAddress","CreationsMapping","allowClear","unit","CreationInputElement","lableText","Title","loading","spinning","RequestDisplay","state","onError","onHash","onReceipt","waitingResponse","wordBreak","wordWrap","enableClipboard","className","message","ABIFunctionCallerView","Form","useForm","form","originAbi","setOriginAbi","callingState","setCallingState","sendingState","setSendingState","clearCallingState","clearSendingState","isSendCommit","resetFields","isWriteFunction","margin","marginTop","layout","onFinish","setTimeout","senderAddress","binedData","transaction","from","to","contractAddress","encodeFunctionCall","sendTransaction","on","hash","receipt","call","then","outputRaw","catch","_call","display","justifyContent","htmlType","disabled","marginRight","marginLeft","ABIEventCallerView","setWaitingResponse","logsData","setLogsData","values","i","Contract","getPastEvents","fromBlock","toBlock","logs","reason","SourceCodeCard","language","codeStyle","sourceCode","SyntaxHighlighter","registerLanguage","solidity","FunctionContent","contract","networkID","deployedAddress","networks","address","fname","eventDoc","events","Details","details","Content","minHeight","background","borderLeftColor","borderLeftWidth","borderLeftStyle","ghost","onBack","subTitle","marginBottom","paddingBottom","readContractAsync","file","reader","FileReader","readAsText","onload","longContract","JSON","parse","shotContract","HomeView","setContracts","netWorkID","setNetWorkID","selectedABI","setSelectedABI","net","getId","netID","itemRender","onDrop","files","dataTransfer","readers","all","dropedContract","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.547e2510.chunk.js","sourcesContent":["import { AbiItem } from 'web3-utils';\n\nexport function functionFormatStringFromABI(abi: AbiItem): string {\n    let inputFormat = abi.inputs?.map((abi) => {\n        return abi.type\n    }).join(',');\n\n    return `${abi.name}(${inputFormat})`;\n}\n\nexport function functionSourceCodeFormatFromABI(abi: AbiItem): string {\n\n    let inputFormat = abi.inputs?.map((abi) => {\n        if (abi.indexed) {\n            return `\\t${abi.type} indexed ${abi.name}`\n        } else {\n            return `\\t${abi.type} ${abi.name}`\n        }\n\n    }).join(',\\n');\n\n    let outputFormat = abi.outputs?.map((abi) => {\n        return \"\\t\" + abi.type + (abi.name.length > 0 ? ` ${abi.name}` : \"\")\n    }).join(',\\n')\n\n    let name = `${abi.type} ${abi.name}(${abi.inputs?.length === 0 ? \"\" : `\\n${inputFormat}\\n`})${abi.stateMutability === undefined ? '' : ' ' + abi.stateMutability}`\n\n    if (abi.type === 'function') {\n        if (outputFormat !== undefined && outputFormat?.length > 0) {\n            name = name + ` returns (\\n${outputFormat}\\n)`\n        }\n    }\n\n    return name + \";\";\n}","import Web3 from \"web3\";\nimport { useState } from 'react';\nimport { AbiItem } from 'web3-utils';\nimport { Layout, Menu, Button } from 'antd';\n\nimport {\n    ProfileFilled,\n    AreaChartOutlined,\n    BarChartOutlined,\n    UserOutlined,\n    UploadOutlined\n} from '@ant-design/icons';\n\nimport * as utils from '../../utils'\nimport { CompiledContract } from '../compile_contract'\n\nimport './index.scss'\n\ntype OnSelectedABIHandleCallBack = (contract?: CompiledContract, abi?: AbiItem) => void\n\nfunction ContractMenu(props: {\n    contracts: CompiledContract[],\n    onSelectedABI: OnSelectedABIHandleCallBack\n}) {\n    const web3 = new Web3((window as any).ethereum);\n\n    const [ownerAddress, setOwnerAddress] = useState<string | undefined>(\"\");\n\n    try {\n        (web3.currentProvider as any).sendAsync({\n            method: \"eth_requestAccounts\"\n        }, (error: Error, response: any) => {\n            if (error == null) {\n                setOwnerAddress(response.result[0]);\n                return;\n            }\n        })\n    } catch (e) {\n        setOwnerAddress(undefined)\n    }\n\n    function MenuHeader() {\n        return (\n            <Button\n                style={{\n                    width: '100%',\n                    height: '50px',\n                }}\n                size=\"middle\"\n                type=\"primary\"\n                icon={<UserOutlined />}\n                danger={ownerAddress !== undefined && ownerAddress.length <= 0}\n            > {\n                    ownerAddress === undefined\n                        ? 'Connect Failed'\n                        : ownerAddress.length <= 0\n                            ? 'Connectioning' :\n                            `${ownerAddress.slice(0, 10)}...${ownerAddress.slice(ownerAddress.length - 10, ownerAddress.length)}`\n                }\n            </Button>\n        )\n    }\n\n    return (\n        <Layout.Sider\n            width='20vw'\n            theme=\"light\"\n            style={{\n                overflow: 'auto',\n                height: '100vh',\n                position: 'fixed',\n                left: 0,\n            }}\n        >\n            <MenuHeader />\n            <Menu\n                mode=\"inline\"\n                theme=\"light\"\n                style={{ height: '100%', borderRight: 1 }}\n            >\n                {\n                    props.contracts.map((contractObject, contractIndex) => {\n                        return (\n                            <Menu.SubMenu\n                                key={contractObject.contractName}\n                                icon={<ProfileFilled />}\n                                title={contractObject.contractName}>\n                                <Menu.SubMenu\n                                    key={`${contractObject.contractName}-FunctionMenu`}\n                                    title=\"函数调用\"\n                                    icon={<AreaChartOutlined />}\n                                >\n                                    {\n                                        contractObject.abi.filter((abiFun) => {\n                                            return abiFun.type === 'function'\n                                        }).map((abi, index) => {\n                                            const funSignFormat = utils.functionFormatStringFromABI(abi);\n                                            return (\n                                                <Menu.Item\n                                                    key={`${contractObject.contractName}-FunctionMenu-${abi.name}-${index}`}\n                                                    onClick={(_) => { props.onSelectedABI(contractObject, abi); }}\n                                                >\n                                                    {\n                                                        contractObject.userdoc !== undefined && contractObject.userdoc.methods[funSignFormat] !== undefined\n                                                            ? contractObject.userdoc.methods[funSignFormat].notice\n                                                            : abi.name\n                                                    }\n                                                </Menu.Item>\n                                            )\n                                        })\n                                    }\n                                </Menu.SubMenu>\n                                <Menu.SubMenu\n                                    key={`${contractObject.contractName}-EventMenu`}\n                                    title=\"事件查询\"\n                                    icon={<BarChartOutlined />}\n                                >\n                                    {\n                                        contractObject.abi.filter((abiFun) => {\n                                            return abiFun.type === 'event'\n                                        }).map((abi, index) => {\n                                            return (\n                                                <Menu.Item\n                                                    key={`${contractObject.contractName}-EventMenu-${abi.name}-${index}`}\n                                                    onClick={(_) => {\n                                                        props.onSelectedABI(contractObject, abi);\n                                                    }}>\n                                                    {\n                                                        abi.name\n                                                    }\n                                                </Menu.Item>\n                                            )\n                                        })\n                                    }\n                                </Menu.SubMenu>\n                            </Menu.SubMenu>\n                        )\n                    })\n                }\n                {\n                    <Menu.Item\n                        key='Upload'\n                        icon={<UploadOutlined />}\n                        onClick={() => {\n                            props.onSelectedABI(undefined, undefined);\n                        }}\n                    >\n                        Upload Contract\n                    </Menu.Item>\n                }\n            </Menu>\n        </Layout.Sider>\n    );\n}\n\nexport default ContractMenu;","import { AbiItem, toWei, fromWei, Unit } from 'web3-utils'\nimport moment from 'moment';\n\nexport interface DevMethodDoc {\n    details?: string,\n    params?: any,\n    returns?: any\n}\n\nexport interface UserMethodDoc {\n    notice?: string,\n}\n\nexport interface UserDocs {\n    kind?: string,\n    methods?: any,\n    version?: number\n}\n\nexport interface DeveloperDocs {\n    kind?: string,\n    events?: any,\n    methods?: any,\n    version?: number,\n    stateVariables?: any[],\n}\n\nexport interface NatspecDocs {\n    userdoc: UserDocs,\n    devdoc: DeveloperDocs\n}\n\nexport type SecondaryType =\n    '$amount:ether' |\n    '$amount:szabo' |\n    '$amount:mwei' |\n    '$number' |\n    '$timestemp'\n\nexport interface ExtDescription {\n    content: string,\n    // 次要类型缺失时，按照主类型处理即可，比如address类型\n    type?: SecondaryType\n}\n\n// 获取在注释中定义的类型信息,如 $number, $timestemp 等\nexport function matchingTypeDescription(content?: string): ExtDescription | undefined {\n\n    if (content === undefined) {\n        return undefined;\n    }\n\n    const reg = /\\s?\\$[a-z]+(:[a-z]+)?\\s?/gi;\n    const matchGroup = reg.exec(content)\n\n    return {\n        content: content.replaceAll(reg, \"\"),\n        type: matchGroup == null ? undefined : matchGroup[0].trim() as SecondaryType,\n    };\n}\n\n// 由于有一些配置了次要类型的字段，需要就行转换此处需要根据次要类型列表生产实际的最终交易参数，\n// 特别是处理的amount类型的次要类型,参数的字段需要严格按照input的顺序输入\nexport function bindInputs(abi: AbiItem, fromData: any[], doc?: DevMethodDoc): any[] {\n\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return abi.inputs?.map((_, index) => fromData[index])!\n    }\n\n    // 参数的类型列表\n    const binded: Array<any> = [];\n\n    abi.inputs?.forEach((input, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.params[input.name])?.type;\n        const typeEncode = input.type + (secondaryType ? secondaryType : '');\n\n        if (input.type.endsWith('[]')) {\n            // 只需要转换$amount类型\n            if (!typeEncode.includes('$amount:')) {\n                binded.push((fromData[index] as string).split('\\n'))\n            } else {\n                const splited = typeEncode.split(':');\n                if (splited.length !== 2) {\n                    throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"中，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n                }\n\n                binded.push(\n                    (fromData[index] as string).split('\\n').map((value) => toWei(value, splited[1] as Unit))\n                )\n            }\n        } else {\n            // 只需要转换$amount类型\n            if (!typeEncode.includes('$amount:')) {\n                binded.push(fromData[index])\n            } else {\n                const splited = typeEncode.split(':');\n                if (splited.length !== 2) {\n                    throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"中，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n                }\n\n                binded.push(toWei(fromData[index], splited[1] as Unit))\n            }\n        }\n    });\n\n    return binded;\n}\n\nexport function bindLogs(abi: AbiItem, fromData: { [key: string]: any }, doc?: DevMethodDoc): { [key: string]: any } {\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return fromData;\n    }\n\n    // 参数的类型列表\n    const encodeObject: any = {}\n\n    abi.inputs?.forEach((input, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.params[input.name])?.type;\n        const typeEncode = input.type + (secondaryType ? secondaryType : '');\n        const value = fromData[index];\n\n        // 只需要转换$amount类型\n        if (typeEncode.includes('$amount:')) {\n            const splited = typeEncode.split(':');\n            if (splited.length !== 2) {\n                throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n            }\n\n            if (input.type.endsWith('[]')) {\n                encodeObject[input.name] =\n                    (fromData[index] as string[]).map((value) => parseFloat(\n                        fromWei(\n                            value,\n                            splited[1] as Unit\n                        )\n                    ).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n\n\n            } else {\n                encodeObject[input.name] = parseFloat(fromWei(fromData[index], splited[1] as Unit)).toString() + ` ${splited[1].toUpperCase()}`\n            }\n        } else if (typeEncode.includes('$timestemp')) {\n            encodeObject[input.name] = moment.unix(value).format('YYYY-MM-DD HH:mm:ss')\n        } else {\n            encodeObject[input.name] = value;\n        }\n    });\n\n    return encodeObject;\n}\n\nexport function bindOutputs(abi: AbiItem, fromData: { [key: string]: any }, doc?: DevMethodDoc): { [key: string]: any } {\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return fromData;\n    }\n\n    // 参数的类型列表\n    const binded: Array<any> = [];\n\n    abi.outputs?.forEach((output, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.returns[output.name])?.type;\n        const typeEncode = output.type + (secondaryType ? secondaryType : '');\n\n        // 只需要转换$amount类型\n        if (!typeEncode.includes('$amount:')) {\n            binded.push(fromData[index])\n        } else {\n            const splited = typeEncode.split(':');\n            if (splited.length !== 2) {\n                throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${output.name}\"，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n            }\n\n            if (output.type.endsWith('[]')) {\n                binded.push(\n                    (fromData[index] as string[]).map((value) => parseFloat(\n                        fromWei(\n                            value,\n                            splited[1] as Unit\n                        )\n                    ).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n                )\n\n            } else {\n                binded.push(parseFloat(fromWei(fromData[index], splited[1] as Unit)).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n            }\n        }\n    });\n\n    return binded;\n}","import Web3 from 'web3';\nimport { EventData } from 'web3-eth-contract';\nimport { AbiItem } from 'web3-utils';\nimport { Table, Card } from 'antd';\nimport { DevMethodDoc } from '../../natspec'\nimport ReactJson from 'react-json-view';\nimport * as NatspecExt from '../../natspec'\n\nexport function LogsDisplay(props: {\n    abi: AbiItem,\n    data?: EventData[],\n    web3: Web3,\n    devdoc?: DevMethodDoc\n}) {\n    const { abi, data, web3, devdoc } = props;\n\n    const columns =\n        abi.inputs?.map(input => {\n            const extDesc = devdoc && devdoc.params && devdoc.params[input.name]\n                ? NatspecExt.matchingTypeDescription(devdoc.params[input.name])\n                : undefined;\n            return {\n                title: extDesc !== undefined ? extDesc.content : input.name,\n                dataIndex: input.name,\n                key: input.name,\n                render: (text: string) => <span>{text}</span>\n            }\n        });\n\n    const dataSource = data?.map((log, index) => {\n        const decoedLog = web3.eth.abi.decodeLog(abi.inputs!, log.raw.data, log.raw.topics.slice(1))\n        return NatspecExt.bindLogs(abi, decoedLog, props.devdoc)\n    })\n\n    return (\n        <Card title=\"Fethed Logs\" bodyStyle={{ padding: 0 }}>\n            <Table\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n            // pagination={false}\n            />\n        </Card>\n    )\n}\n\nexport function ResponseDisplay(props: {\n    abi: AbiItem,\n    data: string,\n    web3: Web3,\n    devdoc?: DevMethodDoc\n}) {\n    const { abi, data, web3, devdoc } = props;\n\n    const columns = [\n        {\n            title: '参数名',\n            dataIndex: 'param',\n            key: 'param',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '类型',\n            dataIndex: 'type',\n            key: 'type',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '描述',\n            dataIndex: 'desc',\n            key: 'desc',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '返回值',\n            dataIndex: 'value',\n            key: 'value',\n            render: (text: any, record: any) => <span>\n                {(record.type as string).endsWith('[]') ? (record.type as string).replaceAll('[]', `[${text.length}]`) : text}\n            </span>,\n        }\n    ]\n\n    const outputs = new Array<{\n        key: number,\n        param: string,\n        type: string,\n        value: string | Object,\n        desc?: string,\n    }>()\n\n    if (abi.outputs !== undefined && abi.outputs.length > 0) {\n        const values = web3.eth.abi.decodeParameters(\n            abi.outputs,\n            data\n        )\n\n        const binded = NatspecExt.bindOutputs(abi, values, props.devdoc)\n\n        abi.outputs.forEach((output, index) => {\n            const extDesc = devdoc && devdoc.returns && devdoc.returns[output.name]\n                ? NatspecExt.matchingTypeDescription(devdoc.returns[output.name])\n                : undefined;\n\n            outputs.push({\n                key: index,\n                param: output.name !== undefined && output.name.length > 0 ? output.name : '未命名',\n                type: output.type,\n                value: typeof binded[index] === 'boolean' ? (binded[index] ? '是' : '否') : binded[index],\n                desc: extDesc !== undefined ? extDesc.content : \"无\"\n            })\n        })\n    }\n\n    return (\n        <Card title=\"Outputs\" bodyStyle={{ padding: 0 }}>\n            <Table\n                columns={columns}\n                dataSource={outputs}\n                bordered\n                pagination={false}\n                expandable={{\n                    expandedRowRender: (record) => {\n                        return (\n                            <ReactJson displayDataTypes={false} displayObjectSize={false} src={record.value as Object} />\n                        )\n                    },\n                    rowExpandable: record => record.type.endsWith('[]')\n                }}\n            />\n        </Card>\n    )\n}\n\n","import { AbiInput } from 'web3-utils';\nimport { Form, Input, Select } from 'antd';\nimport { SecondaryType, matchingTypeDescription } from '../../natspec'\n\nconst { Option } = Select;\n\ntype InputCreateHandle = (input: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => JSX.Element\n\nconst InputTextFromItem = (\n    arg: AbiInput,\n    regExp: RegExp,\n    errorMessage: string,\n    fieldName: string,\n    desc: string,\n    required: boolean,\n    secondary?: SecondaryType\n) => {\n    const rules =\n        [\n            {\n                validator: async (_: any, inputValue: string) => {\n                    if (arg.type.endsWith('[]')) {\n                        for (let subInput of inputValue.split('\\n')) {\n                            if (!regExp.test(subInput)) {\n                                return Promise.reject(new Error(errorMessage))\n                            }\n                        }\n                        return Promise.resolve();\n\n                    } else {\n                        if ((inputValue === undefined || inputValue.length <= 0) && !required) {\n                            return Promise.resolve();\n                        }\n                        return !regExp.test(inputValue)\n                            ? Promise.reject(new Error(errorMessage))\n                            : Promise.resolve();\n                    }\n                },\n            },\n        ];\n\n    return (\n        <Form.Item\n            name={fieldName}\n            label={desc}\n            rules={rules}\n            required={required}\n        >\n            {\n                arg.type.endsWith('[]')\n                    ?\n                    <div>\n                        <Input.TextArea autoSize={true} />\n                        <span style={{\n                            color: 'blue'\n                        }}>{`* 该字段类型为${arg.type.toUpperCase()},请在输入框中已换行分割每一个元素。`}</span>\n                    </div>\n                    : <Input placeholder=\"\" addonAfter={arg.type.toUpperCase()} />\n            }\n        </Form.Item>\n    )\n}\n\nconst TypeInputText: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(arg, new RegExp('.+'), '该字段不能为空', name, desc, required, secondary)\n}\n\nconst TypeInputNumber: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(arg, new RegExp('.+'), '该字段不能为空', name, desc, required, secondary)\n}\n\nconst TypeInputBoolean: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return (\n        <Form.Item name={name} label={desc} required={required} >\n            <Select\n                placeholder=\"请选择\"\n                allowClear\n            >\n                <Option value=\"true\">是</Option>\n                <Option value=\"false\">否</Option>\n            </Select>\n        </Form.Item>\n    )\n}\n\nconst TypeInputAddress: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(\n        arg,\n        new RegExp('^0x([0-9]|[a-z]|[A-Z]){40}$'), '请输入一个正确的十六进制地址，已0x开头',\n        name,\n        desc,\n        required,\n        secondary\n    )\n}\n\nconst TypeInputAmount: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    const unit = secondary!.toString().split(':')[1];\n    return (\n        <Form.Item name={name} label={desc} required={required}>\n            <Input type=\"number\" name={name} placeholder=\"\" addonAfter={unit.toUpperCase()} />\n        </Form.Item >\n    )\n}\n\nconst CreationsMapping = {\n    \"bool\": TypeInputBoolean,\n    \"string\": TypeInputText,\n    \"address\": TypeInputAddress,\n    \"address[]\": TypeInputAddress,\n    \"int256\": TypeInputNumber,\n    \"uint256\": {\n        undefined: TypeInputNumber,\n        '$amount:ether': TypeInputAmount\n    }\n} as any\n\nfunction CreationInputElement(input: AbiInput, name: string, desc?: string): JSX.Element {\n\n    const extDesc = matchingTypeDescription(desc)\n    const lableText = input.name + (extDesc ? ` (${extDesc.content})` : '')\n\n    try {\n        if (typeof CreationsMapping[input.type] == 'function') {\n            return CreationsMapping[input.type](input, name, lableText, !input.indexed, extDesc?.type)\n        }\n        else if (\n            typeof CreationsMapping[input.type] == 'object' &&\n            extDesc?.type\n        ) {\n            return CreationsMapping[input.type][extDesc!.type](input, name, lableText, !input.indexed, extDesc?.type)\n        }\n\n        throw Error(\"Can not find type\")\n\n    } catch (e) {\n        return TypeInputText(input, name, lableText, !input.indexed, extDesc?.type)\n    }\n}\n\nexport default CreationInputElement;","import { Card, Space, Spin } from 'antd';\nimport ReactJson from 'react-json-view';\nimport '../index'\n\nexport interface TxSendingState {\n    waitingResponse: boolean;\n    onHash?: string,\n    onError?: any,\n    onReceipt?: any,\n}\n\nfunction Title(props: { loading: boolean }) {\n    return (\n        <Space size=\"middle\" >\n            {props.loading ? 'Pending' : 'Result'}\n            <Spin size=\"small\" spinning={props.loading} />\n        </Space>\n    )\n}\n\nexport function RequestDisplay(props: {\n    state: TxSendingState\n}) {\n    return props.state.onError === undefined\n        && props.state.onHash === undefined\n        && props.state.onReceipt === undefined\n        ? null\n        : (\n            <Card\n                style={{\n                    padding: 0,\n                }}\n                title={<Title loading={props.state.waitingResponse} />}>\n                {props.state.onHash !== undefined ? <Card style={{ padding: 0 }} title=\"Hash\">{props.state.onHash}</Card> : null}\n                {\n                    props.state.onReceipt !== undefined\n                        ? <Card style={{ padding: 0 }} title=\"Receipt\">\n                            <ReactJson\n                                style={{\n                                    width: '100%',\n                                    wordBreak: 'break-all',\n                                    wordWrap: 'break-word',\n                                }}\n                                enableClipboard={false}\n                                displayDataTypes={false}\n                                displayObjectSize={false}\n                                src={props.state.onReceipt as Object}\n                            />\n                        </Card>\n                        : null\n                }\n                {props.state.onError !== undefined ? <Card style={{ padding: 0 }} title=\"Error\" className=\"errorMessage\">{props.state.onError.message}</Card> : null}\n            </Card>\n        )\n}","import Web3 from 'web3';\nimport { useState } from 'react';\nimport { AbiItem } from 'web3-utils';\nimport { Form, Button, Card } from 'antd';\nimport * as NatspecExt from '../natspec'\nimport { ResponseDisplay } from './response'\nimport './index.scss'\nimport './inputs'\nimport CreationInputElement from './inputs';\nimport { TxSendingState, RequestDisplay } from './request';\n\ninterface TxCallingState {\n    waitingResponse: boolean,\n    error?: Error,\n    result?: any\n}\n\nfunction ABIFunctionCallerView(props: {\n    web3: Web3,\n    abi: AbiItem,\n    contractAddress: string,\n    devdoc?: NatspecExt.DevMethodDoc,\n    userdoc?: NatspecExt.UserMethodDoc,\n    style?: React.CSSProperties,\n    className?: string\n}) {\n    const [form] = Form.useForm();\n    const [originAbi, setOriginAbi] = useState<AbiItem>();\n    const [callingState, setCallingState] = useState<TxCallingState>({\n        waitingResponse: false,\n    });\n\n    const [sendingState, setSendingState] = useState<TxSendingState>({\n        waitingResponse: false,\n        onHash: undefined,\n        onReceipt: undefined,\n        onError: undefined\n    })\n\n    const clearCallingState = () => {\n        setCallingState({\n            waitingResponse: false,\n            error: undefined,\n            result: undefined\n        })\n    }\n    const clearSendingState = () => {\n        setSendingState({\n            waitingResponse: false,\n            onHash: undefined,\n            onReceipt: undefined,\n            onError: undefined\n        })\n    }\n\n    let isSendCommit = false\n\n    if (originAbi !== props.abi) {\n        form.resetFields();\n        setOriginAbi(props.abi);\n        setCallingState({\n            waitingResponse: false,\n        });\n        clearSendingState();\n    }\n\n    // 该方法是否需要Send\n    const isWriteFunction = ['nonpayable', 'payable'].includes(props.abi.stateMutability!.toString())\n\n    function _send(fromData: any) {\n        clearSendingState();\n        clearCallingState();\n\n        setSendingState({ waitingResponse: true })\n\n        return new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    (props.web3.currentProvider as any).sendAsync({\n                        method: \"eth_requestAccounts\"\n                    }, async (error: Error, response: any) => {\n                        if (error == null) {\n\n                            const senderAddress = response.result[0];\n                            let binedData = [];\n                            if (props.abi.inputs !== undefined && props.abi.inputs.length > 0) {\n                                binedData = NatspecExt.bindInputs(props.abi, fromData, props.devdoc);\n                            }\n\n                            const transaction = {\n                                from: senderAddress,\n                                to: props.contractAddress,\n                                data: props.web3.eth.abi.encodeFunctionCall(\n                                    props.abi,\n                                    binedData.map((value) => value)\n                                )\n                            }\n\n                            let onHash: string;\n\n                            props.web3.eth.sendTransaction(transaction)\n                                .on(\"transactionHash\", hash => {\n                                    setSendingState({\n                                        waitingResponse: true,\n                                        onHash: hash,\n                                    })\n                                    onHash = hash;\n                                })\n                                .on(\"receipt\", receipt => {\n                                    setSendingState({\n                                        waitingResponse: false,\n                                        onHash: onHash,\n                                        onReceipt: receipt,\n                                    })\n                                })\n                                .on(\"error\", error => {\n                                    setSendingState({\n                                        waitingResponse: false,\n                                        onError: error\n                                    })\n                                })\n                        } else {\n                            setSendingState({\n                                waitingResponse: false,\n                                onError: error,\n                            });\n                        }\n                    })\n                } catch (e) {\n                    setSendingState({\n                        waitingResponse: false,\n                        onError: e as Error,\n                        onReceipt: undefined,\n                        onHash: undefined,\n                    });\n                }\n            }, 500);\n        })\n    }\n\n    function _call(fromData: any) {\n\n        clearSendingState();\n        clearCallingState();\n\n        setCallingState({\n            waitingResponse: true,\n        });\n\n        return new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    (props.web3.currentProvider as any).sendAsync({\n                        method: \"eth_requestAccounts\"\n                    }, async (error: Error, response: any) => {\n                        if (error == null) {\n\n                            const senderAddress = response.result[0];\n                            let binedData = [];\n                            if (props.abi.inputs !== undefined && props.abi.inputs.length > 0) {\n                                binedData = NatspecExt.bindInputs(props.abi, fromData, props.devdoc);\n                            }\n\n                            const transaction = {\n                                from: senderAddress,\n                                to: props.contractAddress,\n                                data: props.web3.eth.abi.encodeFunctionCall(\n                                    props.abi,\n                                    binedData.map((value) => value)\n                                )\n                            }\n\n                            props.web3.eth.call(transaction)\n                                .then(outputRaw => {\n                                    setCallingState({\n                                        waitingResponse: false,\n                                        result: outputRaw\n                                    });\n                                })\n                                .catch(e => {\n                                    setCallingState({\n                                        waitingResponse: false,\n                                        error: e as Error\n                                    });\n                                });\n\n                        } else {\n                            setCallingState({\n                                waitingResponse: false,\n                                error: error,\n                            });\n                        }\n                    })\n                } catch (e) {\n                    setCallingState({\n                        waitingResponse: false,\n                        error: e as Error\n                    });\n                }\n            }, 500);\n        })\n    }\n\n    return (\n        <div style={props.style} className={props.className}>\n            <Card title=\"Inputs\" style={{\n                width: \"100%\",\n                padding: \"0px\",\n                margin: \"0px\",\n                marginTop: \"20px\",\n            }}>\n                <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(data) => {\n                        isSendCommit\n                            ? _send(data)\n                            : _call(data)\n                    }}\n                >\n                    {\n                        props.abi.inputs === undefined || props.abi.inputs?.length <= 0\n                            ? null\n                            : props.abi.inputs?.map((arg, index) =>\n                                CreationInputElement(\n                                    arg,\n                                    `${index}`,\n                                    props.devdoc\n                                        && props.devdoc.params\n                                        && props.devdoc.params[arg.name]\n                                        ? props.devdoc.params[arg.name]\n                                        : undefined\n                                )\n                            )\n                    }\n                    <Form.Item>\n                        <div style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\"\n                        }}>\n                            <Button\n                                type=\"primary\"\n                                size=\"large\"\n                                htmlType=\"submit\"\n                                loading={callingState.waitingResponse}\n                                disabled={sendingState.waitingResponse}\n                                style={{\n                                    width: \"100%\",\n                                    marginRight: isWriteFunction ? \"20px\" : \"0px\"\n                                }}\n                                onClick={() => {\n                                    isSendCommit = false\n                                }}\n                            >\n                                Call\n                            </Button>\n                            {\n                                isWriteFunction\n                                    ? <Button\n                                        type=\"primary\"\n                                        danger\n                                        size=\"large\"\n                                        htmlType=\"submit\"\n                                        loading={sendingState.waitingResponse}\n                                        disabled={callingState.waitingResponse}\n                                        style={{\n                                            width: \"100%\",\n                                            marginLeft: \"20px\"\n                                        }}\n                                        onClick={() => {\n                                            isSendCommit = true\n                                        }}\n                                    >\n                                        Send\n                                    </Button>\n                                    : null\n                            }\n                        </div>\n                    </Form.Item>\n                </Form>\n            </Card>\n            {\n                callingState.result\n                    ? <ResponseDisplay\n                        web3={props.web3}\n                        abi={props.abi}\n                        data={callingState.result}\n                        devdoc={props.devdoc}\n                    />\n                    : null\n            }\n            {\n                callingState.error\n                    ? <Card\n                        className=\"errorMessage\"\n                        title=\"Error Infomation\"\n                    >\n                        {callingState.error.message}\n                    </Card>\n                    : null\n            }\n            <RequestDisplay state={sendingState} />\n        </div>\n    )\n}\n\nexport default ABIFunctionCallerView","import Web3 from 'web3';\nimport { EventData } from 'web3-eth-contract';\nimport { useState } from 'react';\nimport { AbiItem } from 'web3-utils';\nimport { Form, Button, Card } from 'antd';\nimport * as NatspecExt from '../natspec'\nimport { LogsDisplay } from './response'\nimport CreationInputElement from './inputs';\n\nimport './index.scss'\nimport './inputs'\n\nfunction ABIEventCallerView(props: {\n    web3: Web3,\n    abi: AbiItem,\n    contractAddress: string,\n    devdoc?: NatspecExt.DevMethodDoc,\n    userdoc?: NatspecExt.UserMethodDoc,\n    style?: React.CSSProperties,\n    className?: string\n}) {\n    const { web3 } = props;\n    const [form] = Form.useForm();\n    const [originAbi, setOriginAbi] = useState<AbiItem>();\n    const [waitingResponse, setWaitingResponse] = useState(false);\n    const [logsData, setLogsData] = useState<EventData[]>();\n\n    if (originAbi !== props.abi) {\n        form.resetFields();\n        setOriginAbi(props.abi);\n        setWaitingResponse(false);\n        setLogsData([])\n    }\n\n    function doFetchLogs(values: any) {\n        setWaitingResponse(true);\n\n        const filter: any = {}\n\n        props.abi.inputs?.filter(input => input.indexed)\n            .forEach((input, i) => {\n                filter[input.name] = values[i]\n            });\n\n        // 使用Contract对象请求Logs，因为不想写topics的填充算法\n        const contract = new web3.eth.Contract([props.abi], props.contractAddress);\n        contract.getPastEvents(props.abi.name!, {\n            filter: filter,\n            fromBlock: values.fromBlock,\n            toBlock: values.toBlock\n        }).then((logs) => {\n            setLogsData(logs);\n            setWaitingResponse(false);\n        }).catch(reason => {\n            setWaitingResponse(false);\n        })\n    }\n\n    return (\n        <div style={props.style} className={props.className}>\n            <Card title=\"Filter\" style={{\n                width: \"100%\",\n                padding: \"0px\",\n                margin: \"0px\",\n                marginTop: \"20px\",\n            }}>\n                <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={doFetchLogs}\n                >\n                    {\n                        CreationInputElement(\n                            {\n                                name: 'fromBlock',\n                                type: 'string',\n                            },\n                            `fromBlock`,\n                            `起始查询区块高度 $number`\n                        )\n                    }\n                    {\n                        CreationInputElement(\n                            {\n                                name: 'toBlock',\n                                type: 'string',\n                            },\n                            `toBlock`,\n                            `结束查询区块高度 $number`\n                        )\n                    }\n                    {\n                        props.abi.inputs === undefined || props.abi.inputs?.length <= 0\n                            ? null\n                            : props.abi.inputs?.filter((input) => input.indexed).map((arg, index) =>\n                                CreationInputElement(\n                                    arg,\n                                    `${index}`,\n                                    props.devdoc\n                                        && props.devdoc.params\n                                        && props.devdoc.params[arg.name]\n                                        ? props.devdoc.params[arg.name]\n                                        : undefined\n                                )\n                            )\n                    }\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            size=\"large\"\n                            htmlType=\"submit\"\n                            loading={waitingResponse}\n                            style={{\n                                width: \"100%\",\n                            }}\n                        >\n                            {waitingResponse ? 'Fetching' : 'Fetch'}\n                        </Button>\n                    </Form.Item>\n                    {\n                        <LogsDisplay\n                            web3={props.web3}\n                            abi={props.abi}\n                            data={logsData}\n                            devdoc={props.devdoc}\n                        />\n                    }\n                </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default ABIEventCallerView","/*\n * @Author: your name\n * @Date: 2021-08-21 18:41:30\n * @LastEditTime: 2021-08-21 19:17:07\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /learn-react/src/components/source_code/index.tsx\n */\n\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { coy as codeStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport solidity from 'react-syntax-highlighter/dist/esm/languages/prism/solidity'\n\nSyntaxHighlighter.registerLanguage('solidity', solidity);\n\nexport function SourceCodeCard(props: {\n    sourceCode: string,\n}) {\n    return (\n        <SyntaxHighlighter language=\"solidity\" style={codeStyle}>\n            {props.sourceCode}\n        </SyntaxHighlighter>\n    );\n}","import Web3 from \"web3\";\nimport \"antd/dist/antd.css\";\nimport { Card, Layout, PageHeader } from 'antd';\nimport * as utils from \"../../utils\"\nimport { AbiItem } from 'web3-utils';\nimport { ABIFunctionCallerView, ABIEventCallerView } from \"../../components/abi_caller\";\nimport { CompiledContract } from '../../components/compile_contract'\nimport { SourceCodeCard } from \"../../components/source_code\";\nimport './index.scss';\n\nexport function FunctionContent(props: {\n    contract: CompiledContract,\n    abi: AbiItem,\n    networkID: number\n}) {\n    const { contract, abi, networkID } = props\n\n    const web3 = new Web3((window as any).ethereum);\n\n    const deployedAddress = contract.networks[networkID].address;\n\n    const fname = utils.functionFormatStringFromABI(abi)\n\n    const devdoc = contract.devdoc && contract.devdoc.methods && contract.devdoc.methods[fname] ? contract.devdoc.methods[fname] : undefined\n    const userdoc = contract.userdoc && contract.userdoc.methods && contract.userdoc.methods[fname] ? contract.userdoc.methods[fname] : undefined\n    const eventDoc = contract.devdoc && contract.devdoc.events && contract.devdoc.events[fname] ? contract.devdoc.events[fname] : undefined\n\n    function parsedTitle() {\n        if (contract.userdoc !== undefined\n            && contract.userdoc.methods !== undefined\n            && contract.userdoc.methods[fname] !== undefined\n            && contract.userdoc.methods[fname].notice !== undefined\n        ) {\n            return contract.userdoc.methods[fname].notice;\n        } else {\n            return ''\n        }\n    }\n\n    function Details() {\n        if (contract.devdoc !== undefined\n            && contract.devdoc.methods !== undefined\n            && contract.devdoc.methods[fname] !== undefined\n            && contract.devdoc.methods[fname].details !== undefined\n        ) {\n            return <Card title=\"描述\" className=\"marginCard\">{contract.devdoc.methods[fname].details}</Card>\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <Layout.Content title={abi.name} style={{\n            minHeight: '100%',\n            background: 'white',\n            borderLeftColor: '#EAEAEA',\n            borderLeftWidth: '1px',\n            borderLeftStyle: 'solid'\n        }}>\n            <PageHeader\n                ghost={false}\n                title={abi.name}\n                onBack={() => { }}\n                subTitle={parsedTitle()}\n                style={{\n                    marginBottom: '20px'\n                }}\n            // extra={[\n            //     <Button key=\"3\">Operation</Button>,\n            //     <Button key=\"2\">Operation</Button>,\n            //     <Button key=\"1\" type=\"primary\">\n            //         Primary\n            //     </Button>,\n            // ]}\n            />\n            <Details />\n            <Card title=\"原型\" className=\"marginCard\">\n                <SourceCodeCard sourceCode={utils.functionSourceCodeFormatFromABI(abi)} />\n            </Card>\n            {\n                abi.type === 'function'\n                    ? <ABIFunctionCallerView\n                        className=\"marginCard\"\n                        style={{\n                            // marginBottom: '50px'\n                            paddingBottom: '50px'\n                        }}\n                        abi={abi}\n                        web3={web3}\n                        contractAddress={deployedAddress}\n                        devdoc={devdoc}\n                        userdoc={userdoc}\n                    />\n                    : null\n            }\n            {\n                abi.type === 'event'\n                    ? <ABIEventCallerView\n                        className=\"marginCard\"\n                        style={{\n                            // marginBottom: '50px'\n                            paddingBottom: '50px'\n                        }}\n                        abi={abi}\n                        web3={web3}\n                        contractAddress={deployedAddress}\n                        devdoc={eventDoc}\n                        userdoc={userdoc}\n                    />\n                    : null\n            }\n\n        </Layout.Content >\n    )\n}","import \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport { Layout } from 'antd';\n\nimport {\n    UploadOutlined\n} from '@ant-design/icons';\n\nimport Web3 from \"web3\";\nimport ContractMenu from \"../../components/contract_menu\";\n\nimport { AbiItem } from 'web3-utils';\nimport { FunctionContent } from \"../content\";\nimport { CompiledContract } from \"../../components/compile_contract\";\nimport Dragger from \"antd/lib/upload/Dragger\";\n\nfunction readContractAsync(file: any) {\n    return new Promise<CompiledContract>((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsText(file);\n        reader.onload = () => {\n\n            // 去除不需要的字段\n            const longContract = JSON.parse(reader.result as string) as CompiledContract;\n            const shotContract = {\n                contractName: longContract.contractName,\n                abi: longContract.abi,\n                networks: longContract.networks,\n                userdoc: longContract.userdoc,\n                devdoc: longContract.devdoc\n            }\n            return resolve(shotContract);\n        }\n    })\n}\n\n\nfunction HomeView() {\n    const web3 = new Web3((window as any).ethereum);\n\n    const [contracts, setContracts] = useState<CompiledContract[]>([]);\n    const [netWorkID, setNetWorkID] = useState<number>();\n    const [selectedABI, setSelectedABI] = useState<{\n        contract?: CompiledContract,\n        abi?: AbiItem\n    }>();\n\n    web3.eth.net.getId().then((netID) => {\n        setNetWorkID(netID);\n    });\n\n    return (\n        netWorkID === undefined\n            ? null\n            : <Layout>\n                <ContractMenu\n                    contracts={contracts}\n                    onSelectedABI={\n                        (contract, abi) => {\n                            setSelectedABI({\n                                contract: contract,\n                                abi: abi\n                            });\n                        }\n                    }\n                />\n                <Layout className=\"site-layout\">\n                    <Layout.Sider\n                        width=\"80vw\"\n                        style={{\n                            marginLeft: '20vw',\n                            overflow: 'auto',\n                            position: 'fixed',\n                            width: '100%',\n                            height: '100%',\n                            left: 0,\n                        }}\n                    >\n                        {\n                            selectedABI !== undefined && selectedABI.contract !== undefined\n                                ? <FunctionContent\n                                    contract={selectedABI.contract!}\n                                    abi={selectedABI.abi!}\n                                    networkID={netWorkID}\n                                />\n                                : <Dragger\n                                    itemRender={() => {\n                                        return null\n                                    }}\n                                    onDrop={\n                                        (e) => {\n                                            let files = e.dataTransfer.files;\n                                            let readers = [];\n\n                                            for (let i = 0; i < files.length; i++) {\n                                                readers.push(readContractAsync(files[i]))\n                                            }\n\n                                            Promise.all(readers).then(dropedContract => {\n                                                setContracts(contracts.concat(dropedContract));\n                                            })\n                                        }\n                                    }\n                                >\n                                    <p className=\"ant-upload-drag-icon\"><UploadOutlined /></p>\n                                    <p className=\"ant-upload-text\">点击上传或者拖动文件至本区域</p>\n                                    <p className=\"ant-upload-hint\">\n                                        仅支持标准的Compiled Contract 格式，比如truffle compile输出的文件，请注意确保是已部署的实例，请检查其中必须包含，abi，networks，字段。\n                                    </p>\n                                </Dragger>\n\n                        }\n                    </Layout.Sider>\n                </Layout>\n            </Layout>\n    )\n}\n\nexport default HomeView;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './views/home';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}