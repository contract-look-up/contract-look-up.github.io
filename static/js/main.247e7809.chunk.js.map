{"version":3,"sources":["utils/index.tsx","components/natspec/index.tsx","components/abi_caller/response/index.tsx","components/abi_caller/inputs/index.tsx","components/abi_caller/request/index.tsx","components/abi_caller/function.tsx","components/abi_caller/event.tsx","components/source_code/index.tsx","views/content/index.tsx","views/contract_setting/index.tsx","views/contract_importer/index.tsx","components/contract_menu/index.tsx","views/home/index.tsx","views/home/states.tsx","reportWebVitals.ts","index.tsx"],"names":["functionFormatStringFromABI","abi","inputFormat","inputs","map","type","join","name","functionSourceCodeFormatFromABI","indexed","outputFormat","outputs","length","undefined","stateMutability","matchingTypeDescription","content","reg","matchGroup","exec","replaceAll","trim","bindInputs","fromData","doc","_","index","binded","forEach","input","secondaryType","params","typeEncode","endsWith","includes","splited","split","Error","push","value","toWei","LogsDisplay","props","data","web3","devdoc","columns","extDesc","NatspecExt","title","dataIndex","key","render","text","dataSource","log","decoedLog","eth","decodeLog","raw","topics","slice","encodeObject","parseFloat","fromWei","toFixed","toUpperCase","toString","moment","unix","format","bodyStyle","padding","bordered","ResponseDisplay","record","Array","output","returns","decodeParameters","param","desc","pagination","expandable","expandedRowRender","displayDataTypes","displayObjectSize","src","rowExpandable","Option","Select","InputTextFromItem","arg","regExp","errorMessage","fieldName","required","secondary","rules","validator","inputValue","a","subInput","test","Promise","reject","resolve","Item","label","TextArea","autoSize","style","color","placeholder","addonAfter","TypeInputText","RegExp","TypeInputNumber","TypeInputAddress","CreationsMapping","allowClear","unit","CreationInputElement","lableText","e","Title","size","loading","spinning","RequestDisplay","state","onError","onHash","onReceipt","waitingResponse","width","wordBreak","wordWrap","enableClipboard","className","message","ABIFunctionCallerView","Form","useForm","form","useState","originAbi","setOriginAbi","callingState","setCallingState","sendingState","setSendingState","clearCallingState","error","result","clearSendingState","isSendCommit","resetFields","isWriteFunction","margin","marginTop","layout","onFinish","contractAddress","setTimeout","currentProvider","sendAsync","method","response","senderAddress","binedData","transaction","from","to","encodeFunctionCall","sendTransaction","on","hash","receipt","_send","call","then","outputRaw","catch","_call","display","justifyContent","htmlType","disabled","marginRight","onClick","danger","marginLeft","ABIEventCallerView","setWaitingResponse","logsData","setLogsData","values","filter","i","Contract","getPastEvents","fromBlock","toBlock","logs","reason","SourceCodeCard","language","codeStyle","sourceCode","SyntaxHighlighter","registerLanguage","solidity","FunctionContent","contract","networkID","Web3","window","ethereum","deployedAddress","networks","address","fname","utils","methods","userdoc","eventDoc","events","Details","details","Content","minHeight","background","borderLeftColor","borderLeftWidth","borderLeftStyle","ghost","onBack","subTitle","notice","paddingBottom","NetWorkTable","connected","parseInt","networkid","row","status","ContractSetting","contractName","column","xxl","xl","lg","md","sm","xs","compiler","version","updatedAt","source","ContractImport","onDropContractFile","itemRender","openFileDialogOnClick","onDrop","directory","UploadOutlined","icon","PlusCircleOutlined","ImportOutlined","ContractMenu","ownerAddress","setOwnerAddress","MenuHeader","height","UserOutlined","Sider","theme","overflow","position","left","mode","borderRight","contracts","contractObject","contractIndex","SubMenu","ProfileFilled","onSelected","SettingFilled","AreaChartOutlined","abiFun","funSignFormat","encodeFunctionSignature","BarChartOutlined","readContractAsync","file","reader","FileReader","readAsText","onload","longContract","JSON","parse","shotContract","HomeView","setContracts","netWorkID","setNetWorkID","contentState","setContetState","RenderContentView","files","dataTransfer","readers","all","dropedContract","concat","net","getId","netID","info","paths","keyPath","find","c","StateCreator","onDropFile","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.247e7809.chunk.js","sourcesContent":["import { AbiItem } from 'web3-utils';\n\nexport function functionFormatStringFromABI(abi: AbiItem): string {\n    let inputFormat = abi.inputs?.map((abi) => {\n        return abi.type\n    }).join(',');\n\n    return `${abi.name}(${inputFormat})`;\n}\n\nexport function functionSourceCodeFormatFromABI(abi: AbiItem): string {\n\n    let inputFormat = abi.inputs?.map((abi) => {\n        if (abi.indexed) {\n            return `\\t${abi.type} indexed ${abi.name}`\n        } else {\n            return `\\t${abi.type} ${abi.name}`\n        }\n\n    }).join(',\\n');\n\n    let outputFormat = abi.outputs?.map((abi) => {\n        return \"\\t\" + abi.type + (abi.name.length > 0 ? ` ${abi.name}` : \"\")\n    }).join(',\\n')\n\n    let name = `${abi.type} ${abi.name}(${abi.inputs?.length === 0 ? \"\" : `\\n${inputFormat}\\n`})${abi.stateMutability === undefined ? '' : ' ' + abi.stateMutability}`\n\n    if (abi.type === 'function') {\n        if (outputFormat !== undefined && outputFormat?.length > 0) {\n            name = name + ` returns (\\n${outputFormat}\\n)`\n        }\n    }\n\n    return name + \";\";\n}","import { AbiItem, toWei, fromWei, Unit } from 'web3-utils'\nimport moment from 'moment';\n\nexport interface DevMethodDoc {\n    details?: string,\n    params?: any,\n    returns?: any\n}\n\nexport interface UserMethodDoc {\n    notice?: string,\n}\n\nexport interface UserDocs {\n    kind?: string,\n    methods?: any,\n    version?: number\n}\n\nexport interface DeveloperDocs {\n    kind?: string,\n    events?: any,\n    methods?: any,\n    version?: number,\n    stateVariables?: any[],\n}\n\nexport interface NatspecDocs {\n    userdoc: UserDocs,\n    devdoc: DeveloperDocs\n}\n\nexport type SecondaryType =\n    '$amount:ether' |\n    '$amount:szabo' |\n    '$amount:mwei' |\n    '$number' |\n    '$timestemp'\n\nexport interface ExtDescription {\n    content: string,\n    // 次要类型缺失时，按照主类型处理即可，比如address类型\n    type?: SecondaryType\n}\n\n// 获取在注释中定义的类型信息,如 $number, $timestemp 等\nexport function matchingTypeDescription(content?: string): ExtDescription | undefined {\n\n    if (content === undefined) {\n        return undefined;\n    }\n\n    const reg = /\\s?\\$[a-z]+(:[a-z]+)?\\s?/gi;\n    const matchGroup = reg.exec(content)\n\n    return {\n        content: content.replaceAll(reg, \"\"),\n        type: matchGroup == null ? undefined : matchGroup[0].trim() as SecondaryType,\n    };\n}\n\n// 由于有一些配置了次要类型的字段，需要就行转换此处需要根据次要类型列表生产实际的最终交易参数，\n// 特别是处理的amount类型的次要类型,参数的字段需要严格按照input的顺序输入\nexport function bindInputs(abi: AbiItem, fromData: any[], doc?: DevMethodDoc): any[] {\n\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return abi.inputs?.map((_, index) => fromData[index])!\n    }\n\n    // 参数的类型列表\n    const binded: Array<any> = [];\n\n    abi.inputs?.forEach((input, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.params[input.name])?.type;\n        const typeEncode = input.type + (secondaryType ? secondaryType : '');\n\n        if (input.type.endsWith('[]')) {\n            // 只需要转换$amount类型\n            if (!typeEncode.includes('$amount:')) {\n                binded.push((fromData[index] as string).split('\\n'))\n            } else {\n                const splited = typeEncode.split(':');\n                if (splited.length !== 2) {\n                    throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"中，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n                }\n\n                binded.push(\n                    (fromData[index] as string).split('\\n').map((value) => toWei(value, splited[1] as Unit))\n                )\n            }\n        } else {\n            // 只需要转换$amount类型\n            if (!typeEncode.includes('$amount:')) {\n                binded.push(fromData[index])\n            } else {\n                const splited = typeEncode.split(':');\n                if (splited.length !== 2) {\n                    throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"中，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n                }\n\n                binded.push(toWei(fromData[index], splited[1] as Unit))\n            }\n        }\n    });\n\n    return binded;\n}\n\nexport function bindLogs(abi: AbiItem, fromData: { [key: string]: any }, doc?: DevMethodDoc): { [key: string]: any } {\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return fromData;\n    }\n\n    // 参数的类型列表\n    const encodeObject: any = {}\n\n    abi.inputs?.forEach((input, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.params[input.name])?.type;\n        const typeEncode = input.type + (secondaryType ? secondaryType : '');\n        const value = fromData[index];\n\n        // 只需要转换$amount类型\n        if (typeEncode.includes('$amount:')) {\n            const splited = typeEncode.split(':');\n            if (splited.length !== 2) {\n                throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${input.name}\"，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n            }\n\n            if (input.type.endsWith('[]')) {\n                encodeObject[input.name] =\n                    (fromData[index] as string[]).map((value) => parseFloat(\n                        fromWei(\n                            value,\n                            splited[1] as Unit\n                        )\n                    ).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n\n\n            } else {\n                encodeObject[input.name] = parseFloat(fromWei(fromData[index], splited[1] as Unit)).toString() + ` ${splited[1].toUpperCase()}`\n            }\n        } else if (typeEncode.includes('$timestemp')) {\n            encodeObject[input.name] = moment.unix(value).format('YYYY-MM-DD HH:mm:ss')\n        } else {\n            encodeObject[input.name] = value;\n        }\n    });\n\n    return encodeObject;\n}\n\nexport function bindOutputs(abi: AbiItem, fromData: { [key: string]: any }, doc?: DevMethodDoc): { [key: string]: any } {\n    // 没有定义Doc的情况，直接返回原值\n    if (doc === undefined) {\n        return fromData;\n    }\n\n    // 参数的类型列表\n    const binded: Array<any> = [];\n\n    abi.outputs?.forEach((output, index) => {\n        // 获取函数的extDesc对象\n        const secondaryType = matchingTypeDescription(doc.returns[output.name])?.type;\n        const typeEncode = output.type + (secondaryType ? secondaryType : '');\n\n        // 只需要转换$amount类型\n        if (!typeEncode.includes('$amount:')) {\n            binded.push(fromData[index])\n        } else {\n            const splited = typeEncode.split(':');\n            if (splited.length !== 2) {\n                throw Error(`无效的次要类型定义\"${typeEncode}\"在\"${output.name}\"，请检查源代码natspec风格注释的[次要类型定义符](在不确定类型的情况下发送交易会导致严重的数据问题).`);\n            }\n\n            if (output.type.endsWith('[]')) {\n                binded.push(\n                    (fromData[index] as string[]).map((value) => parseFloat(\n                        fromWei(\n                            value,\n                            splited[1] as Unit\n                        )\n                    ).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n                )\n\n            } else {\n                binded.push(parseFloat(fromWei(fromData[index], splited[1] as Unit)).toFixed(8) + ` ${splited[1].toUpperCase()}`)\n            }\n        }\n    });\n\n    return binded;\n}","import Web3 from 'web3';\nimport { EventData } from 'web3-eth-contract';\nimport { AbiItem } from 'web3-utils';\nimport { Table, Card } from 'antd';\nimport { DevMethodDoc } from '../../natspec'\nimport ReactJson from 'react-json-view';\nimport * as NatspecExt from '../../natspec'\n\nexport function LogsDisplay(props: {\n    abi: AbiItem,\n    data?: EventData[],\n    web3: Web3,\n    devdoc?: DevMethodDoc\n}) {\n    const { abi, data, web3, devdoc } = props;\n\n    const columns =\n        abi.inputs?.map(input => {\n            const extDesc = devdoc && devdoc.params && devdoc.params[input.name]\n                ? NatspecExt.matchingTypeDescription(devdoc.params[input.name])\n                : undefined;\n            return {\n                title: extDesc !== undefined ? extDesc.content : input.name,\n                dataIndex: input.name,\n                key: input.name,\n                render: (text: string) => <span>{text}</span>\n            }\n        });\n\n    const dataSource = data?.map((log, index) => {\n        const decoedLog = web3.eth.abi.decodeLog(abi.inputs!, log.raw.data, log.raw.topics.slice(1))\n        return NatspecExt.bindLogs(abi, decoedLog, props.devdoc)\n    })\n\n    return (\n        <Card title=\"Fethed Logs\" bodyStyle={{ padding: 0 }}>\n            <Table\n                columns={columns}\n                dataSource={dataSource}\n                bordered\n            // pagination={false}\n            />\n        </Card>\n    )\n}\n\nexport function ResponseDisplay(props: {\n    abi: AbiItem,\n    data: string,\n    web3: Web3,\n    devdoc?: DevMethodDoc\n}) {\n    const { abi, data, web3, devdoc } = props;\n\n    const columns = [\n        {\n            title: '参数名',\n            dataIndex: 'param',\n            key: 'param',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '类型',\n            dataIndex: 'type',\n            key: 'type',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '描述',\n            dataIndex: 'desc',\n            key: 'desc',\n            render: (text: string) => <span>{text}</span>\n        },\n        {\n            title: '返回值',\n            dataIndex: 'value',\n            key: 'value',\n            render: (text: any, record: any) => <span>\n                {(record.type as string).endsWith('[]') ? (record.type as string).replaceAll('[]', `[${text.length}]`) : text}\n            </span>,\n        }\n    ]\n\n    const outputs = new Array<{\n        key: number,\n        param: string,\n        type: string,\n        value: string | Object,\n        desc?: string,\n    }>()\n\n    if (abi.outputs !== undefined && abi.outputs.length > 0) {\n        const values = web3.eth.abi.decodeParameters(\n            abi.outputs,\n            data\n        )\n\n        const binded = NatspecExt.bindOutputs(abi, values, props.devdoc)\n\n        abi.outputs.forEach((output, index) => {\n            const extDesc = devdoc && devdoc.returns && devdoc.returns[output.name]\n                ? NatspecExt.matchingTypeDescription(devdoc.returns[output.name])\n                : undefined;\n\n            outputs.push({\n                key: index,\n                param: output.name !== undefined && output.name.length > 0 ? output.name : '未命名',\n                type: output.type,\n                value: typeof binded[index] === 'boolean' ? (binded[index] ? '是' : '否') : binded[index],\n                desc: extDesc !== undefined ? extDesc.content : \"无\"\n            })\n        })\n    }\n\n    return (\n        <Card title=\"Outputs\" bodyStyle={{ padding: 0 }}>\n            <Table\n                columns={columns}\n                dataSource={outputs}\n                bordered\n                pagination={false}\n                expandable={{\n                    expandedRowRender: (record) => {\n                        return (\n                            <ReactJson displayDataTypes={false} displayObjectSize={false} src={record.value as Object} />\n                        )\n                    },\n                    rowExpandable: record => record.type.endsWith('[]')\n                }}\n            />\n        </Card>\n    )\n}\n\n","import { AbiInput } from 'web3-utils';\nimport { Form, Input, Select } from 'antd';\nimport { SecondaryType, matchingTypeDescription } from '../../natspec'\n\nconst { Option } = Select;\n\ntype InputCreateHandle = (input: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => JSX.Element\n\nconst InputTextFromItem = (\n    arg: AbiInput,\n    regExp: RegExp,\n    errorMessage: string,\n    fieldName: string,\n    desc: string,\n    required: boolean,\n    secondary?: SecondaryType\n) => {\n    const rules =\n        [\n            {\n                validator: async (_: any, inputValue: string) => {\n                    if (arg.type.endsWith('[]')) {\n                        for (let subInput of inputValue.split('\\n')) {\n                            if (!regExp.test(subInput)) {\n                                return Promise.reject(new Error(errorMessage))\n                            }\n                        }\n                        return Promise.resolve();\n\n                    } else {\n                        if ((inputValue === undefined || inputValue.length <= 0) && !required) {\n                            return Promise.resolve();\n                        }\n                        return !regExp.test(inputValue)\n                            ? Promise.reject(new Error(errorMessage))\n                            : Promise.resolve();\n                    }\n                },\n            },\n        ];\n\n    return (\n        <Form.Item\n            name={fieldName}\n            label={desc}\n            rules={rules}\n            required={required}\n        >\n            {\n                arg.type.endsWith('[]')\n                    ?\n                    <div>\n                        <Input.TextArea autoSize={true} />\n                        <span style={{\n                            color: 'blue'\n                        }}>{`* 该字段类型为${arg.type.toUpperCase()},请在输入框中已换行分割每一个元素。`}</span>\n                    </div>\n                    : <Input placeholder=\"\" addonAfter={arg.type.toUpperCase()} />\n            }\n        </Form.Item>\n    )\n}\n\nconst TypeInputText: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(arg, new RegExp('.+'), '该字段不能为空', name, desc, required, secondary)\n}\n\nconst TypeInputNumber: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(arg, new RegExp('.+'), '该字段不能为空', name, desc, required, secondary)\n}\n\nconst TypeInputBoolean: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return (\n        <Form.Item name={name} label={desc} required={required} >\n            <Select\n                placeholder=\"请选择\"\n                allowClear\n            >\n                <Option value=\"true\">是</Option>\n                <Option value=\"false\">否</Option>\n            </Select>\n        </Form.Item>\n    )\n}\n\nconst TypeInputAddress: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    return InputTextFromItem(\n        arg,\n        new RegExp('^0x([0-9]|[a-z]|[A-Z]){40}$'), '请输入一个正确的十六进制地址，已0x开头',\n        name,\n        desc,\n        required,\n        secondary\n    )\n}\n\nconst TypeInputAmount: InputCreateHandle = (arg: AbiInput, name: string, desc: string, required: boolean, secondary?: SecondaryType) => {\n    const unit = secondary!.toString().split(':')[1];\n    return (\n        <Form.Item name={name} label={desc} required={required}>\n            <Input type=\"number\" name={name} placeholder=\"\" addonAfter={unit.toUpperCase()} />\n        </Form.Item >\n    )\n}\n\nconst CreationsMapping = {\n    \"bool\": TypeInputBoolean,\n    \"string\": TypeInputText,\n    \"address\": TypeInputAddress,\n    \"address[]\": TypeInputAddress,\n    \"int256\": TypeInputNumber,\n    \"uint256\": {\n        undefined: TypeInputNumber,\n        '$amount:ether': TypeInputAmount\n    }\n} as any\n\nfunction CreationInputElement(input: AbiInput, name: string, desc?: string): JSX.Element {\n\n    const extDesc = matchingTypeDescription(desc)\n    const lableText = input.name + (extDesc ? ` (${extDesc.content})` : '')\n\n    try {\n        if (typeof CreationsMapping[input.type] == 'function') {\n            return CreationsMapping[input.type](input, name, lableText, !input.indexed, extDesc?.type)\n        }\n        else if (\n            typeof CreationsMapping[input.type] == 'object' &&\n            extDesc?.type\n        ) {\n            return CreationsMapping[input.type][extDesc!.type](input, name, lableText, !input.indexed, extDesc?.type)\n        }\n\n        throw Error(\"Can not find type\")\n\n    } catch (e) {\n        return TypeInputText(input, name, lableText, !input.indexed, extDesc?.type)\n    }\n}\n\nexport default CreationInputElement;","import { Card, Space, Spin } from 'antd';\nimport ReactJson from 'react-json-view';\nimport '../index'\n\nexport interface TxSendingState {\n    waitingResponse: boolean;\n    onHash?: string,\n    onError?: any,\n    onReceipt?: any,\n}\n\nfunction Title(props: { loading: boolean }) {\n    return (\n        <Space size=\"middle\" >\n            {props.loading ? 'Pending' : 'Result'}\n            <Spin size=\"small\" spinning={props.loading} />\n        </Space>\n    )\n}\n\nexport function RequestDisplay(props: {\n    state: TxSendingState\n}) {\n    return props.state.onError === undefined\n        && props.state.onHash === undefined\n        && props.state.onReceipt === undefined\n        ? null\n        : (\n            <Card\n                style={{\n                    padding: 0,\n                }}\n                title={<Title loading={props.state.waitingResponse} />}>\n                {props.state.onHash !== undefined ? <Card style={{ padding: 0 }} title=\"Hash\">{props.state.onHash}</Card> : null}\n                {\n                    props.state.onReceipt !== undefined\n                        ? <Card style={{ padding: 0 }} title=\"Receipt\">\n                            <ReactJson\n                                style={{\n                                    width: '100%',\n                                    wordBreak: 'break-all',\n                                    wordWrap: 'break-word',\n                                }}\n                                enableClipboard={false}\n                                displayDataTypes={false}\n                                displayObjectSize={false}\n                                src={props.state.onReceipt as Object}\n                            />\n                        </Card>\n                        : null\n                }\n                {props.state.onError !== undefined ? <Card style={{ padding: 0 }} title=\"Error\" className=\"errorMessage\">{props.state.onError.message}</Card> : null}\n            </Card>\n        )\n}","import Web3 from 'web3';\nimport { useState } from 'react';\nimport { AbiItem } from 'web3-utils';\nimport { Form, Button, Card } from 'antd';\nimport * as NatspecExt from '../natspec'\nimport { ResponseDisplay } from './response'\nimport './index.scss'\nimport './inputs'\nimport CreationInputElement from './inputs';\nimport { TxSendingState, RequestDisplay } from './request';\n\ninterface TxCallingState {\n    waitingResponse: boolean,\n    error?: Error,\n    result?: any\n}\n\nfunction ABIFunctionCallerView(props: {\n    web3: Web3,\n    abi: AbiItem,\n    contractAddress?: string,\n    devdoc?: NatspecExt.DevMethodDoc,\n    userdoc?: NatspecExt.UserMethodDoc,\n    style?: React.CSSProperties,\n    className?: string\n}) {\n    const [form] = Form.useForm();\n    const [originAbi, setOriginAbi] = useState<AbiItem>();\n    const [callingState, setCallingState] = useState<TxCallingState>({\n        waitingResponse: false,\n    });\n\n    const [sendingState, setSendingState] = useState<TxSendingState>({\n        waitingResponse: false,\n        onHash: undefined,\n        onReceipt: undefined,\n        onError: undefined\n    })\n\n    const clearCallingState = () => {\n        setCallingState({\n            waitingResponse: false,\n            error: undefined,\n            result: undefined\n        })\n    }\n    const clearSendingState = () => {\n        setSendingState({\n            waitingResponse: false,\n            onHash: undefined,\n            onReceipt: undefined,\n            onError: undefined\n        })\n    }\n\n    let isSendCommit = false\n\n    if (originAbi !== props.abi) {\n        form.resetFields();\n        setOriginAbi(props.abi);\n        setCallingState({\n            waitingResponse: false,\n        });\n        clearSendingState();\n    }\n\n    // 该方法是否需要Send\n    const isWriteFunction = ['nonpayable', 'payable'].includes(props.abi.stateMutability!.toString())\n\n    function _send(fromData: any) {\n\n        clearSendingState();\n        clearCallingState();\n\n        if (props.contractAddress === undefined) {\n            setSendingState({\n                waitingResponse: false,\n                onError: new Error('当前连接的网络，并未部署当前合约的实例，请检查networks或者当前连接的网络是否正确。'),\n            });\n\n            return;\n        }\n\n        setSendingState({ waitingResponse: true })\n\n        return new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    (props.web3.currentProvider as any).sendAsync({\n                        method: \"eth_requestAccounts\"\n                    }, async (error: Error, response: any) => {\n                        if (error == null) {\n\n                            const senderAddress = response.result[0];\n                            let binedData = [];\n                            if (props.abi.inputs !== undefined && props.abi.inputs.length > 0) {\n                                binedData = NatspecExt.bindInputs(props.abi, fromData, props.devdoc);\n                            }\n\n                            const transaction = {\n                                from: senderAddress,\n                                to: props.contractAddress,\n                                data: props.web3.eth.abi.encodeFunctionCall(\n                                    props.abi,\n                                    binedData.map((value) => value)\n                                )\n                            }\n\n                            let onHash: string;\n\n                            props.web3.eth.sendTransaction(transaction)\n                                .on(\"transactionHash\", hash => {\n                                    setSendingState({\n                                        waitingResponse: true,\n                                        onHash: hash,\n                                    })\n                                    onHash = hash;\n                                })\n                                .on(\"receipt\", receipt => {\n                                    setSendingState({\n                                        waitingResponse: false,\n                                        onHash: onHash,\n                                        onReceipt: receipt,\n                                    })\n                                })\n                                .on(\"error\", error => {\n                                    setSendingState({\n                                        waitingResponse: false,\n                                        onError: error\n                                    })\n                                })\n                        } else {\n                            setSendingState({\n                                waitingResponse: false,\n                                onError: error,\n                            });\n                        }\n                    })\n                } catch (e) {\n                    setSendingState({\n                        waitingResponse: false,\n                        onError: e as Error,\n                        onReceipt: undefined,\n                        onHash: undefined,\n                    });\n                }\n            }, 500);\n        })\n    }\n\n    function _call(fromData: any) {\n\n        clearSendingState();\n        clearCallingState();\n\n        if (props.contractAddress === undefined) {\n            setCallingState({\n                waitingResponse: false,\n                error: new Error('当前连接的网络，并未部署当前合约的实例，请检查networks或者当前连接的网络是否正确。'),\n            })\n            return;\n        }\n\n        setCallingState({\n            waitingResponse: true,\n        });\n\n        return new Promise<void>((resolve, reject) => {\n            setTimeout(() => {\n                try {\n                    (props.web3.currentProvider as any).sendAsync({\n                        method: \"eth_requestAccounts\"\n                    }, async (error: Error, response: any) => {\n                        if (error == null) {\n\n                            const senderAddress = response.result[0];\n                            let binedData = [];\n                            if (props.abi.inputs !== undefined && props.abi.inputs.length > 0) {\n                                binedData = NatspecExt.bindInputs(props.abi, fromData, props.devdoc);\n                            }\n\n                            const transaction = {\n                                from: senderAddress,\n                                to: props.contractAddress,\n                                data: props.web3.eth.abi.encodeFunctionCall(\n                                    props.abi,\n                                    binedData.map((value) => value)\n                                )\n                            }\n\n                            props.web3.eth.call(transaction)\n                                .then(outputRaw => {\n                                    setCallingState({\n                                        waitingResponse: false,\n                                        result: outputRaw\n                                    });\n                                })\n                                .catch(e => {\n                                    setCallingState({\n                                        waitingResponse: false,\n                                        error: e as Error\n                                    });\n                                });\n\n                        } else {\n                            setCallingState({\n                                waitingResponse: false,\n                                error: error,\n                            });\n                        }\n                    })\n                } catch (e) {\n                    setCallingState({\n                        waitingResponse: false,\n                        error: e as Error\n                    });\n                }\n            }, 500);\n        })\n    }\n\n    return (\n        <div style={props.style} className={props.className}>\n            <Card title=\"Inputs\" style={{\n                width: \"100%\",\n                padding: \"0px\",\n                margin: \"0px\",\n                marginTop: \"20px\",\n            }}>\n                <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={\n                        (data) => {\n                            isSendCommit\n                                ? _send(data)\n                                : _call(data)\n                        }}\n                >\n                    {\n                        props.abi.inputs === undefined || props.abi.inputs?.length <= 0\n                            ? null\n                            : props.abi.inputs?.map((arg, index) =>\n                                CreationInputElement(\n                                    arg,\n                                    `${index}`,\n                                    props.devdoc\n                                        && props.devdoc.params\n                                        && props.devdoc.params[arg.name]\n                                        ? props.devdoc.params[arg.name]\n                                        : undefined\n                                )\n                            )\n                    }\n                    <Form.Item>\n                        <div style={{\n                            display: \"flex\",\n                            justifyContent: \"space-between\"\n                        }}>\n                            <Button\n                                type=\"primary\"\n                                size=\"large\"\n                                htmlType=\"submit\"\n                                loading={callingState.waitingResponse}\n                                disabled={sendingState.waitingResponse}\n                                style={{\n                                    width: \"100%\",\n                                    marginRight: isWriteFunction ? \"20px\" : \"0px\"\n                                }}\n                                onClick={() => {\n                                    isSendCommit = false\n                                }}\n                            >\n                                Call\n                            </Button>\n                            {\n                                isWriteFunction\n                                    ? <Button\n                                        type=\"primary\"\n                                        danger\n                                        size=\"large\"\n                                        htmlType=\"submit\"\n                                        loading={sendingState.waitingResponse}\n                                        disabled={callingState.waitingResponse}\n                                        style={{\n                                            width: \"100%\",\n                                            marginLeft: \"20px\"\n                                        }}\n                                        onClick={() => {\n                                            isSendCommit = true\n                                        }}\n                                    >\n                                        Send\n                                    </Button>\n                                    : null\n                            }\n                        </div>\n                    </Form.Item>\n                </Form>\n            </Card>\n            {\n                callingState.result\n                    ? <ResponseDisplay\n                        web3={props.web3}\n                        abi={props.abi}\n                        data={callingState.result}\n                        devdoc={props.devdoc}\n                    />\n                    : null\n            }\n            {\n                callingState.error\n                    ? <Card\n                        className=\"errorMessage\"\n                        title=\"Error Infomation\"\n                    >\n                        {callingState.error.message}\n                    </Card>\n                    : null\n            }\n            <RequestDisplay state={sendingState} />\n        </div>\n    )\n}\n\nexport default ABIFunctionCallerView","import Web3 from 'web3';\nimport { EventData } from 'web3-eth-contract';\nimport { useState } from 'react';\nimport { AbiItem } from 'web3-utils';\nimport { Form, Button, Card } from 'antd';\nimport * as NatspecExt from '../natspec'\nimport { LogsDisplay } from './response'\nimport CreationInputElement from './inputs';\n\nimport './index.scss'\nimport './inputs'\n\nfunction ABIEventCallerView(props: {\n    web3: Web3,\n    abi: AbiItem,\n    contractAddress: string,\n    devdoc?: NatspecExt.DevMethodDoc,\n    userdoc?: NatspecExt.UserMethodDoc,\n    style?: React.CSSProperties,\n    className?: string\n}) {\n    const { web3 } = props;\n    const [form] = Form.useForm();\n    const [originAbi, setOriginAbi] = useState<AbiItem>();\n    const [waitingResponse, setWaitingResponse] = useState(false);\n    const [logsData, setLogsData] = useState<EventData[]>();\n\n    if (originAbi !== props.abi) {\n        form.resetFields();\n        setOriginAbi(props.abi);\n        setWaitingResponse(false);\n        setLogsData([])\n    }\n\n    function doFetchLogs(values: any) {\n        setWaitingResponse(true);\n\n        const filter: any = {}\n\n        props.abi.inputs?.filter(input => input.indexed)\n            .forEach((input, i) => {\n                filter[input.name] = values[i]\n            });\n\n        // 使用Contract对象请求Logs，因为不想写topics的填充算法\n        const contract = new web3.eth.Contract([props.abi], props.contractAddress);\n        contract.getPastEvents(props.abi.name!, {\n            filter: filter,\n            fromBlock: values.fromBlock,\n            toBlock: values.toBlock\n        }).then((logs) => {\n            setLogsData(logs);\n            setWaitingResponse(false);\n        }).catch(reason => {\n            setWaitingResponse(false);\n        })\n    }\n\n    return (\n        <div style={props.style} className={props.className}>\n            <Card title=\"Filter\" style={{\n                width: \"100%\",\n                padding: \"0px\",\n                margin: \"0px\",\n                marginTop: \"20px\",\n            }}>\n                <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={doFetchLogs}\n                >\n                    {\n                        CreationInputElement(\n                            {\n                                name: 'fromBlock',\n                                type: 'string',\n                            },\n                            `fromBlock`,\n                            `起始查询区块高度 $number`\n                        )\n                    }\n                    {\n                        CreationInputElement(\n                            {\n                                name: 'toBlock',\n                                type: 'string',\n                            },\n                            `toBlock`,\n                            `结束查询区块高度 $number`\n                        )\n                    }\n                    {\n                        props.abi.inputs === undefined || props.abi.inputs?.length <= 0\n                            ? null\n                            : props.abi.inputs?.filter((input) => input.indexed).map((arg, index) =>\n                                CreationInputElement(\n                                    arg,\n                                    `${index}`,\n                                    props.devdoc\n                                        && props.devdoc.params\n                                        && props.devdoc.params[arg.name]\n                                        ? props.devdoc.params[arg.name]\n                                        : undefined\n                                )\n                            )\n                    }\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            size=\"large\"\n                            htmlType=\"submit\"\n                            loading={waitingResponse}\n                            style={{\n                                width: \"100%\",\n                            }}\n                        >\n                            {waitingResponse ? 'Fetching' : 'Fetch'}\n                        </Button>\n                    </Form.Item>\n                    {\n                        <LogsDisplay\n                            web3={props.web3}\n                            abi={props.abi}\n                            data={logsData}\n                            devdoc={props.devdoc}\n                        />\n                    }\n                </Form>\n            </Card>\n        </div>\n    )\n}\n\nexport default ABIEventCallerView","/*\n * @Author: your name\n * @Date: 2021-08-21 18:41:30\n * @LastEditTime: 2021-08-21 19:17:07\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: /learn-react/src/components/source_code/index.tsx\n */\n\nimport { PrismLight as SyntaxHighlighter } from 'react-syntax-highlighter'\nimport { coy as codeStyle } from 'react-syntax-highlighter/dist/esm/styles/prism'\nimport solidity from 'react-syntax-highlighter/dist/esm/languages/prism/solidity'\n\nSyntaxHighlighter.registerLanguage('solidity', solidity);\n\nexport function SourceCodeCard(props: {\n    sourceCode: string,\n}) {\n    return (\n        <SyntaxHighlighter language=\"solidity\" style={codeStyle}>\n            {props.sourceCode}\n        </SyntaxHighlighter>\n    );\n}","import Web3 from \"web3\";\nimport \"antd/dist/antd.css\";\nimport { Card, Layout, PageHeader } from 'antd';\nimport * as utils from \"../../utils\"\nimport { AbiItem } from 'web3-utils';\nimport { ABIFunctionCallerView, ABIEventCallerView } from \"../../components/abi_caller\";\nimport { CompiledContract } from '../../components/compile_contract'\nimport { SourceCodeCard } from \"../../components/source_code\";\nimport './index.scss';\n\nexport function FunctionContent(props: {\n    contract: CompiledContract,\n    abi: AbiItem,\n    networkID: number\n}) {\n    const { contract, abi, networkID } = props\n\n    const web3 = new Web3((window as any).ethereum);\n\n    const deployedAddress = contract.networks !== undefined ? contract.networks[networkID]?.address : undefined;\n\n    const fname = utils.functionFormatStringFromABI(abi)\n\n    const devdoc = contract.devdoc && contract.devdoc.methods && contract.devdoc.methods[fname] ? contract.devdoc.methods[fname] : undefined\n    const userdoc = contract.userdoc && contract.userdoc.methods && contract.userdoc.methods[fname] ? contract.userdoc.methods[fname] : undefined\n    const eventDoc = contract.devdoc && contract.devdoc.events && contract.devdoc.events[fname] ? contract.devdoc.events[fname] : undefined\n\n    function parsedTitle() {\n        if (contract.userdoc !== undefined\n            && contract.userdoc.methods !== undefined\n            && contract.userdoc.methods[fname] !== undefined\n            && contract.userdoc.methods[fname].notice !== undefined\n        ) {\n            return contract.userdoc.methods[fname].notice;\n        } else {\n            return ''\n        }\n    }\n\n    function Details() {\n        if (contract.devdoc !== undefined\n            && contract.devdoc.methods !== undefined\n            && contract.devdoc.methods[fname] !== undefined\n            && contract.devdoc.methods[fname].details !== undefined\n        ) {\n            return <Card title=\"描述\" className=\"marginCard\">{contract.devdoc.methods[fname].details}</Card>\n        } else {\n            return null\n        }\n    }\n\n    return (\n        <Layout.Content title={abi.name} style={{\n            minHeight: '100%',\n            background: 'white',\n            borderLeftColor: '#EAEAEA',\n            borderLeftWidth: '1px',\n            borderLeftStyle: 'solid'\n        }}>\n            <PageHeader\n                ghost={false}\n                title={abi.name}\n                onBack={() => { }}\n                subTitle={parsedTitle()}\n            // extra={[\n            //     <Button key=\"3\">Operation</Button>,\n            //     <Button key=\"2\">Operation</Button>,\n            //     <Button key=\"1\" type=\"primary\">\n            //         Primary\n            //     </Button>,\n            // ]}\n            />\n            <Details />\n            <Card title=\"原型\" className=\"marginCard\">\n                <SourceCodeCard sourceCode={utils.functionSourceCodeFormatFromABI(abi)} />\n            </Card>\n            {\n                abi.type === 'function'\n                    ? <ABIFunctionCallerView\n                        className=\"marginCard\"\n                        style={{\n                            // marginBottom: '50px'\n                            paddingBottom: '50px'\n                        }}\n                        abi={abi}\n                        web3={web3}\n                        contractAddress={deployedAddress}\n                        devdoc={devdoc}\n                        userdoc={userdoc}\n                    />\n                    : null\n            }\n            {\n                abi.type === 'event'\n                    ? <ABIEventCallerView\n                        className=\"marginCard\"\n                        style={{\n                            // marginBottom: '50px'\n                            paddingBottom: '50px'\n                        }}\n                        abi={abi}\n                        web3={web3}\n                        contractAddress={deployedAddress}\n                        devdoc={eventDoc}\n                        userdoc={userdoc}\n                    />\n                    : null\n            }\n        </Layout.Content >\n    )\n}","import \"antd/dist/antd.css\";\nimport { Card, Layout, PageHeader, Table, Badge } from 'antd';\nimport { CompiledContract } from '../../components/compile_contract'\nimport { SourceCodeCard } from \"../../components/source_code\";\nimport { Descriptions } from 'antd';\nimport moment from \"moment\";\n\nfunction NetWorkTable(params: {\n    networks: Object[],\n    networkID: number,\n}) {\n    const { networks, networkID } = params;\n\n    const dataSource = [];\n\n    for (var a in networks) {\n        dataSource.push({\n            connected: parseInt(a) === networkID,\n            networkid: a,\n            contractAddress: (networks[a] as any).address\n        })\n    }\n\n    return (\n        <Card\n            bodyStyle={{ padding: 0 }}\n            style={{\n                marginTop: '20px',\n                marginLeft: '20px',\n                marginRight: '20px',\n                padding: 0,\n            }}\n        >\n            <Table\n                columns={[\n                    {\n                        title: 'NetWork',\n                        dataIndex: 'networkid',\n                        key: 'networkid',\n                        render: (text: string, row) =>\n                            <span>\n                                {\n                                    row.connected ? <Badge status=\"success\" /> : null\n                                }\n                                {\n                                    text\n                                }\n                            </span>\n                    },\n                    {\n                        title: 'Address',\n                        dataIndex: 'contractAddress',\n                        key: 'contractAddress',\n                        render: (text: string) => <span>{text}</span>\n                    },\n                ]}\n                pagination={false}\n                dataSource={dataSource}\n            >\n            </Table>\n        </Card>\n    )\n}\n\n\nexport function ContractSetting(params: {\n    contract: CompiledContract,\n    networkID: number,\n}) {\n    const { contract, networkID } = params;\n\n    return (\n        <Layout.Content style={{\n            minHeight: '100%',\n            background: 'white',\n            borderLeftColor: '#EAEAEA',\n            borderLeftWidth: '1px',\n            borderLeftStyle: 'solid'\n        }}>\n            <PageHeader\n                ghost={false}\n                title={contract.contractName}\n                onBack={() => { }}\n            />\n            <Descriptions\n                title=\"Infomations\"\n                bordered\n                style={{\n                    marginLeft: '20px',\n                    marginRight: '20px',\n                }}\n                column={{ xxl: 4, xl: 3, lg: 3, md: 3, sm: 2, xs: 1 }}\n            >\n                <Descriptions.Item label=\"Name\">{contract.contractName}</Descriptions.Item>\n                <Descriptions.Item label=\"Compiler\">\n                    {\n                        contract.compiler?.name === undefined ? \"None\" : contract.compiler?.name\n                    }\n                </Descriptions.Item>\n                <Descriptions.Item label=\"CompilerVersion\">\n                    {\n                        contract.compiler?.version === undefined ? \"None\" : contract.compiler?.version\n                    }\n                </Descriptions.Item>\n                <Descriptions.Item label=\"UpdateTime\">\n                    {\n                        contract.compiler?.version === undefined ? \"None\" : moment(contract.updatedAt).format('YYYY-MM-DD hh:mm:ss')\n                    }\n                </Descriptions.Item>\n            </Descriptions>\n            <NetWorkTable networks={contract.networks} networkID={networkID} />\n            {\n                contract.source !== undefined\n                    ?\n                    <Card style={{\n                        marginLeft: '20px',\n                        marginRight: '20px',\n                    }}>\n                        <SourceCodeCard sourceCode={contract.source} />\n                    </Card>\n                    : null\n            }\n        </Layout.Content>\n    )\n}","import \"antd/dist/antd.css\";\nimport { Row, Button } from 'antd';\nimport Dragger from \"antd/lib/upload/Dragger\";\nimport './index.scss';\n\nimport {\n    ImportOutlined,\n    PlusCircleOutlined,\n    UploadOutlined\n} from '@ant-design/icons';\n\nexport function ContractImport(params: {\n    onDropContractFile: (e: any) => void\n}) {\n    const { onDropContractFile } = params;\n    return (\n        <Dragger\n            className=\"dragger\"\n            itemRender={() => {\n                return null\n            }}\n            openFileDialogOnClick={false}\n            onDrop={onDropContractFile}\n            directory\n        >\n            <p className=\"ant-upload-drag-icon\"><UploadOutlined /></p>\n            <p className=\"ant-upload-text\">点击上传或者拖动文件至本区域</p>\n            <p className=\"ant-upload-hint\">\n                仅支持标准的Compiled Contract 格式，比如truffle compile输出的文件，请注意确保是已部署的实例，请检查其中必须包含，abi，networks，字段。\n            </p>\n            <Row className=\"action-button-group\">\n                <Button ghost disabled className=\"action\" type=\"primary\" size=\"large\" icon={<PlusCircleOutlined />} >通过模版ABI创建(暂未实现)</Button>\n                <Button ghost disabled className=\"action\" type=\"primary\" size=\"large\" icon={<ImportOutlined />}>通过URL导入(暂未实现)</Button>\n            </Row>\n        </Dragger>\n    )\n}","import Web3 from \"web3\";\nimport { useState } from 'react';\nimport { Layout, Menu, Button } from 'antd';\nimport { MenuClickEventHandler } from 'rc-menu/lib/interface';\n\nimport {\n    ProfileFilled,\n    AreaChartOutlined,\n    BarChartOutlined,\n    UserOutlined,\n    UploadOutlined,\n    SettingFilled,\n} from '@ant-design/icons';\n\nimport * as utils from '../../utils'\nimport { CompiledContract } from '../compile_contract'\n\nimport './index.scss'\n\nfunction ContractMenu(props: {\n    contracts: CompiledContract[],\n    onSelected: MenuClickEventHandler,\n    onDropFile: (e: any) => void,\n}) {\n    const web3 = new Web3((window as any).ethereum);\n\n    const [ownerAddress, setOwnerAddress] = useState<string | undefined>(\"\");\n\n    try {\n        (web3.currentProvider as any).sendAsync({\n            method: \"eth_requestAccounts\"\n        }, (error: Error, response: any) => {\n            if (error == null) {\n                setOwnerAddress(response.result[0]);\n                return;\n            }\n        })\n    } catch (e) {\n        setOwnerAddress(undefined)\n    }\n\n    function MenuHeader() {\n        return (\n            <Button\n                style={{\n                    width: '100%',\n                    height: '50px',\n                }}\n                size=\"middle\"\n                type=\"primary\"\n                icon={<UserOutlined />}\n                danger={ownerAddress !== undefined && ownerAddress.length <= 0}\n            > {\n                    ownerAddress === undefined\n                        ? 'Connect Failed'\n                        : ownerAddress.length <= 0\n                            ? 'Connectioning' :\n                            `${ownerAddress.slice(0, 10)}...${ownerAddress.slice(ownerAddress.length - 10, ownerAddress.length)}`\n                }\n            </Button>\n        )\n    }\n\n    return (\n        <Layout.Sider\n            width='20vw'\n            theme=\"light\"\n            style={{\n                overflow: 'auto',\n                height: '100vh',\n                position: 'fixed',\n                left: 0,\n            }}\n        >\n            <MenuHeader />\n            <Menu\n                mode=\"inline\"\n                theme=\"light\"\n                style={{ height: '100%', borderRight: 1 }}\n            >\n                {\n                    props.contracts.map((contractObject, contractIndex) => {\n                        return (\n                            <Menu.SubMenu\n                                key={contractObject.contractName}\n                                icon={<ProfileFilled />}\n                                title={contractObject.contractName}>\n                                <Menu.Item\n                                    key={`${contractObject.contractName}-setting`}\n                                    onClick={props.onSelected}\n                                    icon={<SettingFilled />}\n                                >\n                                    \b合约信息\n                                </Menu.Item>\n                                <Menu.SubMenu\n                                    key={`${contractObject.contractName}-function`}\n                                    title=\"函数调用\"\n                                    icon={<AreaChartOutlined />}\n                                >\n                                    {\n                                        contractObject.abi.filter((abiFun) => {\n                                            return abiFun.type === 'function'\n                                        }).map((abi, index) => {\n                                            const funSignFormat = utils.functionFormatStringFromABI(abi);\n                                            return (\n                                                <Menu.Item\n                                                    key={web3.eth.abi.encodeFunctionSignature(abi)}\n                                                    onClick={props.onSelected}\n                                                >\n                                                    {\n                                                        contractObject.userdoc !== undefined && contractObject.userdoc.methods[funSignFormat] !== undefined\n                                                            ? contractObject.userdoc.methods[funSignFormat].notice\n                                                            : abi.name\n                                                    }\n                                                </Menu.Item>\n                                            )\n                                        })\n                                    }\n                                </Menu.SubMenu>\n                                <Menu.SubMenu\n                                    key={`${contractObject.contractName}-event`}\n                                    title=\"事件查询\"\n                                    icon={<BarChartOutlined />}\n                                >\n                                    {\n                                        contractObject.abi.filter((abiFun) => {\n                                            return abiFun.type === 'event'\n                                        }).map((abi, index) => {\n                                            return (\n                                                <Menu.Item\n                                                    // key={`${contractObject.contractName}-event-${index}`}\n                                                    key={web3.eth.abi.encodeFunctionSignature(abi)}\n                                                    onClick={props.onSelected}>\n                                                    {\n                                                        abi.name\n                                                    }\n                                                </Menu.Item>\n                                            )\n                                        })\n                                    }\n                                </Menu.SubMenu>\n                            </Menu.SubMenu>\n                        )\n                    })\n                }\n                {\n                    <Menu.Item\n                        key='upload'\n                        icon={<UploadOutlined />}\n                        onClick={props.onSelected}\n                    >\n                        Upload Contract\n                    </Menu.Item>\n                }\n\n            </Menu>\n        </Layout.Sider>\n\n\n    );\n}\n\nexport default ContractMenu;","import Web3 from \"web3\";\nimport \"antd/dist/antd.css\";\nimport { useState } from \"react\";\nimport { Layout, Result } from 'antd';\nimport { MenuInfo } from 'rc-menu/lib/interface';\nimport { FunctionContent } from \"../content\";\nimport { ContractSetting } from \"../contract_setting\";\nimport { CompiledContract } from \"../../components/compile_contract\";\nimport { ContractImport } from \"../contract_importer\";\nimport ContractMenu from \"../../components/contract_menu\";\n\nimport * as StateCreator from \"./states\";\n\nfunction readContractAsync(file: any) {\n    return new Promise<CompiledContract>((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.readAsText(file);\n        reader.onload = () => {\n            // 去除不需要的字段\n            const longContract = JSON.parse(reader.result as string) as CompiledContract;\n            const shotContract = {\n                contractName: longContract.contractName,\n                abi: longContract.abi,\n                networks: longContract.networks,\n                userdoc: longContract.userdoc,\n                devdoc: longContract.devdoc,\n                source: (longContract as any).source,\n                updatedAt: (longContract as any).updatedAt,\n                compiler: (longContract as any).compiler,\n            }\n            return resolve(shotContract);\n        }\n    })\n}\n\nfunction HomeView() {\n    const web3 = new Web3((window as any).ethereum);\n\n    const [contracts, setContracts] = useState<CompiledContract[]>([]);\n    const [netWorkID, setNetWorkID] = useState<number>();\n    const [contentState, setContetState] = useState<StateCreator.ContentViewState>(StateCreator.UploadState());\n\n    web3.eth.net.getId().then((netID) => {\n        setNetWorkID(netID);\n    });\n\n    // 主菜单点击\n    function onMenuSelect(info: MenuInfo): void {\n\n        const paths = info.keyPath\n        if (paths.length <= 0) {\n            return;\n        }\n\n        switch (paths.length) {\n            case 1: {\n                switch (paths[0]) {\n                    case 'upload': {\n                        setContetState(StateCreator.UploadState());\n                        break;\n                    }\n                }\n                break;\n            }\n\n            // 二级菜单点击\n            case 2: {\n                const contract = contracts.find((c) => c.contractName === paths[paths.length - 1]);\n                if (contract !== undefined) {\n                    if (paths.length === 2 && paths[0] === `${contract.contractName}-setting`) {\n                        setContetState(StateCreator.SettingState(contract))\n                    }\n                }\n                break;\n            }\n\n            // 三级菜单点击\n            case 3: {\n                const contract = contracts.find((c) => c.contractName === paths[paths.length - 1]);\n                if (contract !== undefined) {\n                    if (\n                        paths.length === 3 &&\n                        (\n                            paths[1] === `${contract.contractName}-function` ||\n                            paths[1] === `${contract.contractName}-event`\n                        )\n                    ) {\n                        const abi = contract.abi?.find((a) => (a.type === 'function' || a.type === 'event') && web3.eth.abi.encodeFunctionSignature(a) === paths[0])\n                        if (abi !== undefined) {\n                            setContetState(StateCreator.ABIState(\n                                contract,\n                                abi\n                            ))\n                        }\n                    }\n                }\n                break;\n            }\n        }\n    }\n\n    function RenderContentView() {\n\n        if (netWorkID === undefined) {\n            return null\n        }\n\n        switch (contentState.type) {\n            case 'method': {\n                return (\n                    <FunctionContent\n                        contract={(contentState as StateCreator.ContractMethodState).contract!}\n                        abi={(contentState as StateCreator.ContractMethodState).abi!}\n                        networkID={netWorkID}\n                    />\n                )\n            }\n\n            case 'setting': {\n                return (\n                    <ContractSetting\n                        contract={(contentState as StateCreator.ContractSettingState).contract!}\n                        networkID={netWorkID}\n                    />\n                )\n            }\n\n            case 'upload': {\n                return <ContractImport onDropContractFile={\n                    (e) => {\n                        let files = e.dataTransfer.files;\n                        let readers = [];\n\n                        for (let i = 0; i < files.length; i++) {\n                            readers.push(readContractAsync(files[i]))\n                        }\n\n                        Promise.all(readers).then(dropedContract => {\n                            setContracts(contracts.concat(dropedContract));\n                        })\n                    }\n                } />\n            }\n\n            default: {\n                return (\n                    <Layout.Content style={{\n                        minHeight: '100%',\n                        background: 'white',\n                    }}>\n                        <Result\n                            status=\"404\"\n                            title=\"无效菜单路径\"\n                            subTitle=\"抱歉，你选择的菜单似乎没有找到对应的内容。\"\n                        />\n                    </Layout.Content>\n                )\n            }\n        }\n    }\n\n    return (\n        netWorkID === undefined\n            ? null\n            : <Layout>\n                <ContractMenu\n                    contracts={contracts}\n                    onSelected={onMenuSelect}\n                    onDropFile={\n                        (e) => {\n                            let files = e.dataTransfer.files;\n                            let readers = [];\n\n                            for (let i = 0; i < files.length; i++) {\n                                readers.push(readContractAsync(files[i]))\n                            }\n\n                            Promise.all(readers).then(dropedContract => {\n                                setContracts(contracts.concat(dropedContract));\n                            })\n                        }\n                    }\n                />\n                <Layout className=\"site-layout\">\n                    <Layout.Sider\n                        width=\"80vw\"\n                        style={{\n                            marginLeft: '20vw',\n                            overflow: 'auto',\n                            position: 'fixed',\n                            width: '100%',\n                            height: '100%',\n                            left: 0,\n                        }}\n                    >\n                        <RenderContentView />\n                    </Layout.Sider>\n                </Layout>\n            </Layout>\n    )\n}\n\nexport default HomeView;\n","import { AbiItem } from 'web3-utils';\nimport { CompiledContract } from \"../../components/compile_contract\";\n\nexport type Types = 'setting' | 'upload' | 'method';\n\n// 抽象\nexport interface ContentViewState {\n    type: Types\n}\n\n// 设置页面\nexport interface ContractSettingState extends ContentViewState {\n    contract: CompiledContract\n}\n\n// abi页面包含function和event\nexport interface ContractMethodState extends ContentViewState {\n    contract: CompiledContract,\n    abi: AbiItem\n}\n\nexport const SettingState = (contract: CompiledContract): ContractSettingState => {\n    return {\n        type: 'setting',\n        contract: contract\n    }\n}\n\nexport const ABIState = (contract: CompiledContract, abi: AbiItem): ContractMethodState => {\n    return {\n        type: 'method',\n        contract: contract,\n        abi: abi,\n    }\n}\n\nexport const UploadState = (): ContentViewState => { return { type: 'upload' } }","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Login from './views/home';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Login />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}